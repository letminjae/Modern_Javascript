<>
<h1>자바스크립트 란?</h1>

<p>1995년 넷스케이프가 웹페이지의 보조적인 기능을 수행하기 위해 만든 프로그래밍 언어에서 시작</p>
<p>넷스케이프를 막기위해 MS가 JScript를 익스플로러에 출시, JScript와 자바스크립트가 경쟁하며 자사브라우저에서만 동작하는 기능들이 추가</p>
<p>브라우저에 따라 웹페이지가 정상적으로 동작하지 않는 크로스 브라우징 이슈가 발생. 모든 브라우저에서 정상적으로 동작하는 프로그래밍 언어가 필요</p>
<p>하여, 컴퓨터 시스템의 표준을 관리하는 ECMA 인터네셔널에 자바스크립트 표준화를 요청. ECMAScript의 탄생</p>

<h1>자바스크립트의 성장과 역사</h1>
<p>처음에 자바스크립트는 웹페이지의 보조적 기능을 수행하는 정도였다. 대부분의 로직은 주로 웹 서버에서 실행 되었고, 브라우저는 서버로부터 전달받은 HTML과 CSS를 단순히 렌더링하는 수준이었다.</p>
<p>렌더링? HTML,CSS,JS를 해석해서 브라우저에 시각적으로 출력하는 것</p>

<h2>AJAX</h2>
<p>자바스크립트를 이용해 서버와 브라우저가 비동기 방식으로 데이터를 교환할 수 있는 통신 기능</p>
<p>이전 웹페이지는 html 코드를 서버로부터 전송받아 웹페이지 전체를 처음부터 다시 랜더링 했다. 굉장히 불필요함!!!
    변경할 필요가 없는 부분까지 포함된 html코드들을 다시 전송받기 때문임
    성능면에서도 불리함, 전체를 렌더링하니 깜빡이는 현상
    이런 상황에서 AJAX의 등장은 웹페이지에서 변경할 필요가 없는 부분은 다시 렌더링 하지않고
    서버로부터 필요한 데이터만 전송받아 변경해야하는 부분만 한정적으로 렌더링 함
</p>

<h2>JQuery</h2>
<p>DOM을 더욱 쉽게 제어할 수 있게 되었고 크로스 브라우징 이슈도 어느정도 해결되었다.</p>

<h2>V8 JS 엔진</h2>
<p>구글 맵스 사례를 통해 자바스크립트로 웹 앱을 구축하려는 시도가 늘면서 더욱 빠르게 동작하는 JS 엔진의 필요성이 대두
    V8 엔진의 등장으로 JS는 데스크톱 앱과 유사한 UX를 제공할 수 있는 웹앱 언어로 정착
    V8 엔진으로 촉발된 JS의 발전으로 과거 웹서버에서 수행되었던 로직들이 대거 클라이언트로 이동. 프론트엔드 영역이 주목받는 계기
</p>

<h2>Node.js</h2>
<p>
    V8 자바스크립트 엔진으로 빌드된 자바스크립트 런타임 환경
    자바스크립트 엔진을 브라우저에서 독립시킨 자바스크립트 실행 환경이라고 할 수 있다.
    프론트와 백에서 자바스크립트를 사용할 수 있다는 동형성은 별도의 언어를 학습하기 위한 시간을 덜 수 있다는 장점.
</p>

<h2>SPA 프레임 워크</h2>
<p>이제 웹앱은 데스크톱앱과 비교해도 손색없는 성능과 UX를 제공하는 것이 필수가 되었고, 개발규모의 복잡도도 상승
    이전의 개발방식으로는 복잡해진 개발 과정을 수행하기 어려워졌고, 이러한 필요에 따라 많은 라이브러리가 출현
    CBD, Component Based Development 방법론을 기반으로 하는 SPA가 대중화 됨.
</p>

<h1> 자바스크립트와 ECMAScript</h1>
<p> ECMAScript는 자바스크립트의 표준사양을 말하며, 값, 타입, 객체, 프로퍼티, 함수, 빌트인 객체 등 핵심문법을 규정함.
    자바스크립트는 일반적 프로그래밍 언어로써 코어를 이루는 ECMAScript와, 브라우저가 별도 지원하는 클라이언트 사이드 Web API인
    DOM, BOM, Canvas, XMLHttpRequest, fetch, requestAnimationFrame, SVG, Web Storage, Web Component, Web worker 등을 아우르는 개념
</p>

<h1> 자바스크립트 특징 </h1>
<p>웹 브라우저에서 동작하는 유일한 프로그래밍 언어
    개발자가 별도의 컴파일 작업을 수행하지 않는 인터프리터 언어
    대부분 모던 자바스크립트 엔진은 인터프리터와 컴파일러의 장점을 결합해 처리속도가 느린 인터프리터의 단점을 해결
    명령형 함수형 프로토타입 기반 객체지향 프로그래밍을 지원한다
    결론 : 자바스크립트는 프ㅗ토타입 기반의 객체지향 언어
</p>

</>
